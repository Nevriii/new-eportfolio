// SCSS Variables
$background-color: #000000;
$particle-size: 1.5px;
$connection-line-color: rgba(255, 255, 255, 0.8);
$connection-line-width: 200px;
$connection-line-height: 1px;
$diagonal-offset: 141px;
$animation-duration: 2s;
$animation-delay: 0.3s;

// SCSS Mixins
@mixin particle-layer-base {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: auto;
  cursor: pointer;
}

@mixin connection-line-base {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  transform: translate(-50%, -50%);
//   z-index: 1;
}

@mixin horizontal-line {
  @include connection-line-base;
  width: $connection-line-width;
  height: $connection-line-height;
  background: linear-gradient(90deg, transparent, $connection-line-color, transparent);
  animation: connectDots $animation-duration ease-in-out infinite;
}

@mixin vertical-line {
  @include connection-line-base;
  width: $connection-line-height;
  height: $connection-line-width;
  background: linear-gradient(180deg, transparent, $connection-line-color, transparent);
  animation: connectDots $animation-duration ease-in-out infinite $animation-delay;
}

@mixin diagonal-lines {
  box-shadow: 
    $diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
    -$diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
    $diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
    -$diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0.6);
  animation: connectDotsShadow $animation-duration ease-in-out infinite;
}

// Background layers
body {
  &::before {
    @include particle-layer-base;
    background: $background-color;
    // z-index: -1;
  }

  &::after {
    @include particle-layer-base;
    background-image: 
      radial-gradient(circle at 20% 30%, rgba(255, 0, 0, 0.3) $particle-size, transparent $particle-size),
      radial-gradient(circle at 30% 50%, rgba(255, 0, 0, 0.25) $particle-size, transparent $particle-size);
    background-size: 
      200px 200px,
      240px 240px;
    animation: moveLeft 12s linear infinite;
    // z-index: -1;
  }
}

// Additional particle layers
.particle-layer-1 {
  @include particle-layer-base;
  background-image: 
    radial-gradient(circle at 40% 80%, rgba(0, 0, 255, 0.3) $particle-size, transparent $particle-size),
    radial-gradient(circle at 50% 60%, rgba(0, 0, 255, 0.25) $particle-size, transparent $particle-size);
  background-size: 
    250px 250px,
    200px 200px;
  animation: moveUp 14s linear infinite;
//   z-index: 1;
}

.particle-layer-2 {
  @include particle-layer-base;
  background-image: 
    radial-gradient(circle at 90% 70%, rgba(255, 0, 0, 0.2) $particle-size, transparent $particle-size),
    radial-gradient(circle at 10% 90%, rgba(0, 255, 0, 0.2) $particle-size, transparent $particle-size);
  background-size: 
    180px 180px,
    220px 220px;
  animation: moveDown 18s linear infinite;
//   z-index: 1;
}

.particle-layer-3 {
  @include particle-layer-base;
  background-image: 
    radial-gradient(circle at 60% 10%, rgba(0, 0, 255, 0.2) $particle-size, transparent $particle-size);
  background-size: 
    280px 280px;
  animation: moveDiagonal 20s linear infinite;
//   z-index: 1;
}

// Movement animations
@keyframes moveLeft {
  0% { transform: translate(0, 0); }
  100% { transform: translate(-100px, 0); }
}

@keyframes moveRight {
  0% { transform: translate(0, 0); }
  100% { transform: translate(100px, 0); }
}

@keyframes moveUp {
  0% { transform: translate(0, 0); }
  100% { transform: translate(0, -80px); }
}

@keyframes moveDown {
  0% { transform: translate(0, 0); }
  100% { transform: translate(0, 80px); }
}

@keyframes moveDiagonal {
  0% { transform: translate(0, 0); }
  100% { transform: translate(60px, 60px); }
}

// Connect the dots hover effect - cursor as epicenter
body {
  &:hover {
    // Create connection lines from cursor position to particles
    &::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-image: 
        // Horizontal line from cursor
        linear-gradient(90deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.8) 50%, transparent 55%, transparent 100%),
        // Vertical line from cursor
        linear-gradient(180deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.8) 50%, transparent 55%, transparent 100%),
        // Diagonal lines from cursor
        linear-gradient(45deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.6) 50%, transparent 55%, transparent 100%),
        linear-gradient(135deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.6) 50%, transparent 55%, transparent 100%),
        linear-gradient(225deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.6) 50%, transparent 55%, transparent 100%),
        linear-gradient(315deg, transparent 0%, transparent 45%, rgba(255, 255, 255, 0.6) 50%, transparent 55%, transparent 100%);
      background-size: 
        100vw 2px,
        2px 100vh,
        200px 200px,
        200px 200px,
        200px 200px,
        200px 200px;
      background-position: 
        0 50%,
        50% 0,
        50% 50%,
        50% 50%,
        50% 50%,
        50% 50%;
      background-repeat: no-repeat;
      opacity: 0;
      animation: connectDotsFromCursor $animation-duration ease-in-out infinite;
    //   z-index: 2;
      pointer-events: none;
    }
  }
}

// Enhanced particle glow on hover
.particle-layer-1,
.particle-layer-2,
.particle-layer-3 {
  &:hover {
    animation-play-state: paused;
    filter: brightness(1.3) contrast(1.1);
  }
}

@keyframes connectDots {
  0%, 100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes connectDotsShadow {
  0%, 100% {
    box-shadow: 
      $diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0),
      -$diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0),
      $diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0),
      -$diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0);
  }
  50% {
    box-shadow: 
      $diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
      -$diagonal-offset $diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
      $diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0.6),
      -$diagonal-offset -$diagonal-offset 0 0 rgba(255, 255, 255, 0.6);
  }
}

// Ensure connection lines stay behind content
.connection-line {
  z-index: -1 !important;
  pointer-events: none !important;
}